Quantum computer.
A quantum computer is any device for computation that makes direct use of distinctively quantum mechanical phenomena, such as superposition and entanglement, to perform operations on data. In a classical (or conventional) computer, information is stored as bits; in a quantum computer, it is stored as qubits (quantum bits). The basic principle of quantum computation is that the quantum properties can be used to represent and structure data, and that quantum mechanisms can be devised and built to perform operations with this data.
Although quantum computing is still in its infancy, experiments have been carried out in which quantum computational operations were executed on a very small number of qubits. Research in both theoretical and practical areas continues at a frantic pace, and many national government and military funding agencies support quantum computing research to develop quantum computers for both civilian and national security purposes, such as cryptanalysis.
If large-scale quantum computers can be built, they will be able to solve certain problems much faster than any of our current classical computers (for example Shor's algorithm). Quantum computers are different from other computers such as DNA computers and traditional computers based on transistors. Some computing architectures such as optical computers may use classical superposition of electromagnetic waves, but without some specifically quantum mechanical resources such as entanglement, they have less potential for computational speed-up than quantum computers.
The basis of quantum computing.
A classical computer has a memory made up of bits, where each bit holds either a one or a zero. A quantum computer maintains a sequence of qubits. A single qubit can hold a one, a zero, or, crucially, a quantum superposition of these, and any two qubits can be in a quantum superposition of 4 states, and three qubits in 8. In general a quantum computer with n qubits can be in up to formula_1 different states simultaneously (this compares to a normal computer than can only be in "one" of formula_1 states at any one time). A quantum computer operates by manipulating those qubits with (possibly a suite of) quantum logic gates.
An example of an implementation of qubits for a quantum computer could start with the use of particles with two spin states: "up" and "down" (typically written formula_3 and formula_4). But in fact any system possessing an observable quantity "A" which is "conserved" under time evolution and such that "A" has at least two discrete and sufficiently spaced consecutive eigenvalues, is a suitable candidate for implementing a qubit. This is true because any such system can be mapped onto an effective 2.
Bits vs. Qubits.
where the coefficients a, b, c..., h are complex numbers whose amplitudes squared are the probabilities to measure the qubits in each state- for example, formula_6 is the probability to measure the register in the state 010. It is important that these numbers are complex, because the phases of the numbers can constructively and destructively interfere with one another; this is an important feature for quantum algorithms.
Recording the state of a quantum register requires an exponential number of complex numbers (the 3-qubit register above requires formula_7 complex numbers). The number of classical bits required even to estimate the complex numbers of some quantum state grows exponentially with the number of qubits. For a 300-qubit quantum register, somewhere on the order of 1090 classical registers are required, more than there are atoms in the observable universe.
Initialization, execution and termination.
In our example, the contents of the qubit registers can be thought of as an 8-dimensional complex vector. An algorithm for a quantum computer must initialize this vector in some specified form (dependent on the design of the quantum computer). In each step of the algorithm, that vector is modified by multiplying it by a unitary matrix. The matrix is determined by the physics of the device. The unitary character of the matrix ensures the matrix is invertible (so each step is reversible).
Upon termination of the algorithm, the 8-dimensional complex vector stored in the register must be somehow read off from the qubit register by a quantum measurement. However, by the laws of quantum mechanics, that measurement will yield a random 3-bit string (and it will destroy the stored state as well). This random string can be used in computing the value of a function because (by design) the probability distribution of the measured output bitstring is skewed in favor of the correct value of the function. By repeated runs of the quantum computer and measurement of the output, the correct value can be determined, to a high probability, by majority polling of the outputs. In brief, quantum computations are probabilistic; see quantum circuit for a more precise formulation.
For more details on the sequences of operations used for various algorithms, see universal quantum computer, Shor's algorithm, Grover's algorithm, Deutsch-Jozsa algorithm, quantum Fourier transform, quantum gate, quantum adiabatic algorithm and quantum error correction. Also refer to the growing field of quantum programming.
The power of quantum computers.
Integer factorization is believed to be computationally infeasible with an ordinary computer for large integers that are the product of only a few prime numbers (e.g., products of two 300-digit primes). By comparison, a quantum computer could solve this problem more efficiently than a classical computer using Shor's algorithm to find its factors. This ability would allow a quantum computer to "break" many of the cryptographic systems in use today, in the sense that there would be a polynomial time (in the number of bits of the integer) algorithm for solving the problem. In particular, most of the popular public key ciphers are based on the difficulty of factoring integers, including forms of RSA. These are used to protect secure Web pages, encrypted email, and many other types of data. Breaking these would have significant ramifications for electronic privacy and security. The only way to increase the security of an algorithm like RSA would be to increase the key size and hope that an adversary does not have the resources to build and use a powerful enough quantum computer.
A way out of this dilemma would be to use some kind of quantum cryptography.
There are also some digital signature schemes that are believed to be secure against quantum computers. See for instance Lamport signatures.
This dramatic advantage of quantum computers has only been discovered for these problems so far: factoring, discrete logarithm. However, there is no proof that the advantage is real: an equally fast classical algorithm may still be discovered. There is one other problem where quantum computers have a smaller, though significant (quadratic) advantage. It is "quantum database search", and can be solved by Grover's algorithm. In this case the advantage is provable. This establishes beyond doubt that (ideal) quantum computers are superior to classical computers for at least one problem.
An example of this is a password cracker that attempts to guess the password for an encrypted file (assuming that the password has a maximum possible length).
For problems with all four properties, the time for a quantum computer to solve this will be proportional to the square root of "n" (it would take an average of ("n" + 1)/2 guesses to find the answer using a classical computer.) That can be a very large speedup, reducing some problems from years to seconds. It can be used to attack symmetric ciphers such as Triple DES and AES by attempting to guess the secret key.
Regardless of whether any of these problems can be shown to have an advantage on a quantum computer, they nonetheless will always have the advantage of being an excellent tool for studying quantum mechanical interactions, which of itself is an enormous value to the scientific community.
These types of problems are classified as NP-complete, and many examples that are algorithmically similar to encryption cracking can be seen at List of NP-complete problems.
Problems and practicality issues.
To summarize the problems from the perspective of an engineer, one needs to solve the challenge of building a system which is isolated from everything "except" the measurement and manipulation mechanism. Furthermore, one needs to be able to turn off the coupling of the qubits to the measurement so as to not decohere the qubits while performing operations on them.
Quantum decoherence.
One major problem is keeping the components of the computer in a coherent state, as the slightest interaction with the external world would cause the system to decohere. This effect causes the unitary character (and more specifically, the invertibility) of quantum computational steps to be violated. Decoherence times for candidate systems, in particular the transverse relaxation time T2 (terminology used in NMR and MRI technology, also called the "dephasing time"), typically range between nanoseconds and seconds at low temperature. The issue for optical approaches are more difficult as these timescales are orders of magnitude lower and an often cited approach to overcome it uses an optical pulse shaping approach. Error rates are typically proportional to the ratio of operating time to decoherence time, hence any operation must be completed much more quickly than the decoherence time.
If the error rate is small enough, it is thought to be possible to use quantum error correction, which corrects errors due to decoherence, thereby allowing the total calculation time to be longer than the decoherence time. An often cited (but rather arbitrary) figure for required error rate in each gate is 10−4. This implies that each gate must be able to perform its task 10,000 times faster than the decoherence time of the system.
Meeting this scalability condition is possible for a wide range of systems. However, the use of error correction brings with it the cost of a greatly increased number of required qubits. The number required to factor integers using Shor's algorithm is still polynomial, and thought to be between "L"4 and "L"6, where "L" is the number of bits in the number to be factored. For a 1000-bit number, this implies a need for 1012 to 1018 qubits.
A very different approach to the stability-decoherence problem is to create a topological quantum computer with anyons, quasi-particles used as threads and relying on knot theory to form stable logic gates.
Candidates.
The large number of candidates shows explicitly that the topic, in spite of rapid progress, is still in its infancy. But at the same time there is also a vast amount of flexibility.
In 2005, researchers at the University of Michigan built a semiconductor chip which functioned as an ion trap. Such devices, produced by standard lithography techniques, may point the way to scalable quantum computing tools. An improved version was made in 2006.
D-Wave Systems Inc. claims to be the world’s first — and only — provider of quantum computing systems designed to run commercial applications. On 13 February, 2007 they ran an initial demonstration of their Orion quantum computing system, which is built around a 16-qubit superconducting adiabatic quantum computer processor. However, since D-Wave Systems has not released the full details of Orion to the scientific community, many experts in the field have expressed skepticism.
Quantum computing in computational complexity theory.
This section surveys what is currently known mathematically about the power of quantum computers. It describes the known results from computational complexity theory and the theory of computation dealing with quantum computers.
The class of problems that can be efficiently solved by quantum computers is called BQP, for "bounded error, quantum, polynomial time". Quantum computers only run probabilistic algorithms, so BQP on quantum computers is the counterpart of BPP on classical computers. It is defined as the set of problems solvable with a polynomial-time algorithm, whose probability of error is bounded away from one quarter. A quantum computer is said to "solve" a problem if, for every instance, its answer will be right with high probability. If that solution runs in polynomial time, then that problem is in BQP.
BQP is suspected to be disjoint from NP-complete and a strict superset of P, but that is not known. Both integer factorization and discrete log are in BQP. Both of these problems are NP problems suspected to be outside BPP, and hence outside P. Both are suspected to not be NP-complete. There is a common misconception that quantum computers can solve NP-complete problems in polynomial time. That is not known to be true, and is generally suspected to be false. Although some claim approximate solutions to certain NP-complete problems may be achieved through adiabatic quantum computing.
An operator for a quantum computer can be thought of as changing a vector by multiplying it with a particular matrix. Multiplication by a matrix is a linear operation. Daniel S. Abrams and Seth Lloyd have shown that if a quantum computer could be designed with "nonlinear" operators, then it could solve NP-complete problems in polynomial time. It could even do so for P-complete problems. They do not believe that such a machine is possible.
Although quantum computers may be faster than classical computers, those described above can't solve any problems that classical computers can't solve, given enough time and memory (albeit possibly an amount that could never practically be brought to bear). A Turing machine can simulate these quantum computers, so such a quantum computer could never solve an undecidable problem like the halting problem. The existence of "standard" quantum computers does not disprove the Church-Turing thesis.
Very recently, many researchers have begun to investigate the possibility of using quantum mechanics for hypercomputation - that is, solving undecidable problems. Such claims have been met with considerable skepticism as to whether it is even theoretically possible; see the hypercomputation article for more details.
Quantum computers in fiction.
The supercomputer Veda used by the paramilitary organization Celestial Being in Mobile Suit Gundam 00 utilizes quantum computing technology for strategic and tactical adaption.
Quantum computing technology is used in the alternate reality game for the Nine Inch Nails album Year Zero to transmit data to the present from the year 2022.
In the 2007 movie "Transformers", it is stated that the Decepticons use quantum computing to break the U.S. Army's data signal in 10 seconds, therefore being able to access secure files. It is stated that even with the most powerful supercomputer, it would take 22 years to do.
The Michael Crichton novel "Timeline" also features use of a quantum computer, especially with regards to deconstructing and reconstructing objects being transported across time (or, more accurately, across the multiverse).
The Robert J. Sawyer trilogy The Neanderthal Parallax involves a quantum computer which unintentionally opens a gateway between different versions of Earth.
Quantum computers and mechanics are also used heavily and explained in great detail in the anime series, Noein.
In the MMORPG EVE Online the Caldari State makes use of Quantum computers.
In Dan Brown's novel "Digital Fortress", the NSA's cypher breaking computer TRANSLTR does NOT use quantum computing to break encryption keys of encrypted E-mails, it uses 3,000 silicon processors.
Gas Powered Games' real-time strategy game "Supreme Commander" features a sentient computer program called QAI, standing for Quantum Artificial Intelligence.
In the Novel "Light", by M. John Harrison, a quantum computer is the research project of the main character, the physicist (and serial killer) Michael Kearney.
In the film "Stealth", Extreme Deep Invader Fighter (EDI) had a quantum computing brain for AI, utilization of advance reconnaissance, and outstanding maneuvers.
In the anime Zegapain, many districts of the world are being simulated by separate Quantum Computers, after a virus had the potential of causing humanity's extinction. The process of moving a physical human into the quantum server was called entanglement, and it resulted in a cut-and-paste of the human from reality into the server. There was a chance of transfer error, and therefore information was degraded over multiple transmissions. Also, Quantum Computers were used in all the fighting robots to allow the pilots to "entangle" and control the robots.
In Mass Effect, quantum computers are an integral part of AI production, and the runtime errors the quantum computer makes because of the unstable environment it is in are said to be the source of the AI's personality.