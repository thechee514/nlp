Leet.
Leet (written 31337, 1337, L337, 1337r0z, 13370rz, and l33t), or Leetspeak, is a written argot used primarily on the Internet, which uses various combinations of ASCII characters to replace Latinate letters. The term is derived from the word "elite", and the usage it describes is a specialized form of symbolic writing. Different dialects of leet are found on different online forums.
Initially, the word "leet" was used as an adjective, to primarily describe the behavior or accomplishments of others in the community. In that usage, Leet generally carries the same meaning when referring to either the game prowess or, in original usage, hacking expertise of another person. From adjective form its use then expanded to include use as an expletive in reaction to a demonstration of the former qualities. With the mass proliferation of Internet use in the 1990s into the 21st century, Leet has since become a part of Internet culture and slang. Leet may also be considered a substitution cipher, albeit with much variation from user to user.
History.
Leet originated within bulletin board systems in the 1980s, where having "elite" status on a BBS allowed a user access to file folders, games, and special chat rooms, often including archives of pirated software, pornography, or text files documenting topics such as how to construct explosives and manufacture illegal drugs. One theory is that it was developed to defeat text filters created by BBS or Internet Relay Chat system operators for message boards to discourage the discussion of forbidden topics, like cracking and hacking. However, creative misspellings and ASCII-art-derived words were also a way to attempt to indicate one was knowledgeable about the culture of computer users. Once reserved to use by hackers, crackers, and script kiddies, Leet has since entered the mainstream. It is now also used to mock newbies, or newcomers, on web sites, or in gaming communities. Some consider emoticons and ASCII art, like smiley faces, to be Leet, while others maintain that Leet consists of only symbolic word encryption. More obscure forms of Leet, involving the use of symbol combinations and almost no letters or numbers, continue to be used for its original purpose of encrypted communication. It is also sometimes used as a script language.
False HTML Tags.
Oh, sure, that's just what we need.</sarcasm>
EverQuest Commands.
"I put my face in my palm, and want to slit my wrists."
Orthography.
One of the hallmarks of Leet is its unique approach to orthography, using substitutions of other characters, letters or otherwise, to represent a letter or letters in a word. The symbol chosen is flexible—anything that the reader can make sense of is valid. However, this practice is not extensively used in regular Leet, more often it is seen in situations where the argot characteristics of the system are required, either to exclude newbies or outsiders in general. Another use for Leet orthographic substitutions is the creation of paraphrased passwords. By using this method, one can create a relatively secure password which would still be easily remembered. Limitations imposed by websites on password length (usually no more than 36) and the characters permitted (usually alphanumeric and underscore) requires less-extensive forms of Leet when used in this application.
Some examples of Leet include: "B1FF" and "n00b", a term for the stereotypical newbie; the L33t programming language; and the webcomic Megatokyo, which contains characters who speak Leet.
Upside-down text===.
A special variety of leet can be used to render words upside down in languages such as HTML that do not permit rotation of text; using Unicode characters (especially those in the International Phonetic Alphabet), a very close approximation of upside-down text can be achieved. The letters s, x, z and o are rotationally symmetrical, while pairs such as b/q, d/p and n/u are rotations of each other. The rest of the letters have been encoded into the Unicode IPA section, creating a full set of upside-down lowercase letters. Coverage of upside-down uppercase letters is far more sparse, and there is no support for upside down numbers (except 0, 8, and 6/9), but punctuation (by use of such characters as the interpunct and the inverted question mark and exclamation point) is mostly covered. Several Internet utilities exist for the transformation of regular text to (and sometimes from) upside-down text; each has its own slightly different algorithm for letters not precisely or well covered. A list of converters and algorithms can be found at the list below.
A similar process is USD encoding, which uses characters entirely within the ASCII character set. Because it is almost entirely alphanumeric, it is far more compatible with other programs that do not support Unicode, and more readily typed by hand. However, the text created by using USD encoding is far less legible, and in fact more closely resembles true Leet. Another problem is that because not all letters fit well, the USD algorithms cannot be a complete involution (i.e., completely convertible back and forth) and contain a complete set of letters at the same time. For instance, the Albartus USD algorithm example seen above has k, T, t, and R still in their upright positions. Another issue with USD encoding is the use of italic type. The letter a will, in most typefaces with italic fonts, render as a "one-story" Latin alpha, thus causing problems with any word using that letter as a lowercase e. Oblique type does not have this problem.
Morphology.
The meaning of this suffix is similar to the more common "-er" and "-r" suffixes (seen in "hacker" and "lesser"), in that it derives agent nouns from a verb stem. It is realized in two different forms: "-xor" and "-zor", and, respectively. For example, the first may be seen in the word "hax(x)or" () and the second in "pwnzor" (). Additionally, this nominalization may also be inflected with all of the suffixes of regular English verbs.
Derivation of a noun from a verb stem is possible by attaching "-age" to the base form of any verb. Attested derivations are "pwnage" and "speakage". However, Leet provides exceptions; the word "leetage" is acceptable, referring to actively being "leet". These nouns are often used with a form of "to be" rather than "to have," e.g., "he is pwnage" rather than "he has pwnage". Either is a more emphatic way of expressing the simpler "he pwns," but the former implies that the person is "embodying" the trait rather than merely possessing it.
Derivation of a noun from an adjective stem is done by attaching "-ness" to any adjective. This is entirely the same as the English form, except it is used much more often in Leet. Nouns such as "lulzness" and "leetness" are derivations using this suffix.
When forming a past participle ending in "-ed", the Leet user may replace the "-e" with an apostrophe, as was common in poetry of previous centuries, (e.g. "pwned" becomes "pwn'd"). Note that the conventions of Leet allow for some misplaced punctuation, since it is assumed that the user is typing very quickly; therefore the apostrophe may shift its position without changing the word's meaning. The word ending may also be substituted by "-t" (e.g. "pwned" becomes "pwnt").
Words ending in "-and", "-anned", "-ant", or a similar sound can sometimes be spelled with an ampersand ("&") to express the ending sound. This is most commonly used with the word "banned" (e.g. "This is the s&box," "I'm sorry, you've been b&", "&hill/&farm"). An alternate form of "B&" is "B7", as the ampersand is typed with the "7" key in the standard US keyboard layout. It is often seen in the phrase "IBB7" (in before banned).
Grammar.
Leet can be pronounced as a single syllable, rhyming with "eat," by way of aphesis of the initial vowel of "elite". It may also be pronounced as two syllables. Like other hacker slang, Leet enjoys a looser grammar than standard English. The loose grammar, just like loose spelling, encodes some level of emphasis, ironic or otherwise. A reader must rely more on intuitive parsing of Leet to determine the meaning of a sentence rather than the actual sentence structure. In particular, speakers of Leet are fond of verbing nouns, turning verbs into nouns (and back again) as forms of emphasis, e.g. "Austin rocks" is weaker than "Austin r0xx0rz" (note spelling), which is weaker than "/\u571N is t3h r0xx0rz" (note grammar), which is weaker than something like "OMFG D00d /\u571N is t3h UBER 1337 R0XX0RZ". In essence, all of these mean "Austin rocks," not necessarily the other options. Added words and misspellings add to the speaker's enjoyment. Leet, like in other hacker slang, employs analogy in construction of new words. For example, if "haxored" is the past tense of the verb "to hack" (hack → haxor → haxored), then "winzored" would be easily understood to be the past tense conjugation of "to win," even if the reader had not seen that particular word before.
Leet has its own colloquialisms, many of which originated as jokes based on common typing errors, habits of new computer users, or knowledge of Internet culture and history. Leet is not solely based upon one language or character set. Greek, Russian, Chinese, and other languages have Leet forms, and Leet in one language may use characters from another where they are available. As such, while it may be referred to as a "cipher", a "dialect", or a "language", Leet does not fit squarely into any of these categories. The term "leet" itself is often written "l33t", or "1337", and many other variations. After the meaning of these became widely familiar, "10100111001" came to be used in its place, because it is the binary form of "1337", making it more of a puzzle to interpret. An increasingly common characteristic of Leet is changing its grammatical usage to be deliberately incorrect. The widespread popularity of deliberate misspelling is similar to the cult following of the "All your base are belong to us" phrase. Indeed, the online and computer communities have been international from their inception, so spellings and phrases typical of non-native speakers are quite common.
Rhyming and rhythm.
Care is taken by users of Leet to combine similarly timed words, or to encipher words into ways such that they have a common rhythm or rhyme. An example of this is the phrase "roffle my woffles" (note both spelling error ("woffle") and word timing) ("roffle" is derived from the phonetic pronunciation of the acronym ROFL). Other examples would be "roxorz your boxorz" (in this case, rhyming).
Over-exclamation and other emphasis.
Another common feature of Leet is over-exclamation, where a sentence is postfixed with many exclamation marks. In some cases, because the exclamation symbol (!) resides on the same key as the number one (1) on QWERTY keyboards, over-exclamation can be accidentally (or purposefully) typed with extraneous numerical digits, owing to the excitement of the typist (e.g. "This is really exciting!!11"). This was especially likely in the context of fast-paced online multiplayer games, where typing carefully leaves the gamer vulnerable to attack. Some deliberately type the numbers, while others take the exclamation further and sarcastically replace some of the digits with various written forms (e.g. "STFU!!11one"), or in cases of extreme sarcasm, another number or prerequisite key (e.g. "OMG!!!!11!!11oneonesix", or "PMG!!!!111!11shiftoneoneoneoneoneeightytwo"). The same applies for interrogative punctuation (e.g. "What are you talking about??//"). Other similar uses include the § (section), ~ (tilde) and @ keys, which are adjacent to the (1) key on various QWERTY keyboards; in extreme cases the exclamations may simply end with a string of garbage characters (e.g. "OMG!!!!!1!1!!!{`+{`+{`$#+% translator (a single Unix command)]